[package]
description = "gRPC bindings to the bpfman API"
name = "bpfman-api"

documentation.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[[bin]]
name = "bpfman-rpc"
path = "src/bin/rpc/main.rs"

[dependencies]
anyhow = { workspace = true, features = ["std"] }
async-trait = { workspace = true }
aya = { workspace = true }
base16ct = { workspace = true, features = ["alloc"] }
base64 = { workspace = true }
bpfman = { workspace = true }
bpfman-csi = { workspace = true }
caps = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = [
    "color",
    "derive",
    "help",
    "std",
    "suggestions",
    "usage",
] }
env_logger = { workspace = true }
flate2 = { workspace = true, features = ["zlib"] }
hex = { workspace = true, features = ["std"] }
lazy_static = { workspace = true }
libsystemd = { workspace = true }
log = { workspace = true }
netlink-packet-route = { workspace = true }
netlink-sys = { workspace = true }
nix = { workspace = true, features = [
    "fs",
    "mount",
    "net",
    "resource",
    "socket",
    "user",
] }
oci-client = { workspace = true, default-features = false, features = [
    "native-tls",
    "trust-dns",
] }
prost = { workspace = true, features = ["prost-derive", "std"] }
rand = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["std"] }
sha2 = { workspace = true }
sigstore = { workspace = true, features = [
    "cached-client",
    "full-native-tls",
    "sign",
    "sigstore-trust-root",
] }
sled = { workspace = true }
systemd-journal-logger = { workspace = true }
tar = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full", "signal"] }
tokio-stream = { workspace = true, features = ["net"] }
toml = { workspace = true, features = ["parse"] }
tonic = { workspace = true, features = ["codegen", "prost", "transport"] }
tower = { workspace = true }
url = { workspace = true }
