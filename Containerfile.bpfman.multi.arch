# We do not use --platform feature to auto fill this ARG because of incompatibility between podman and docker
ARG BUILDPLATFORM=linux/amd64

FROM --platform=$BUILDPLATFORM ubuntu:24.04 AS bpfman-build

ARG BUILDPLATFORM

# The following ARGs are set internally by docker/build-push-action in github actions
ARG TARGETPLATFORM

WORKDIR /usr/src/bpfman
COPY ./ /usr/src/bpfman

RUN mkdir -p bin/
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
      echo "Building x86" && \
      cp target/x86_64-unknown-linux-gnu/release/bpfman bin/. && \
      cp target/x86_64-unknown-linux-gnu/release/bpfman-ns bin/. && \
      cp target/x86_64-unknown-linux-gnu/release/bpfman-rpc bin/.; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
      echo "Building arm64" && \
      cp target/aarch64-unknown-linux-gnu/release/bpfman bin/. && \
      cp target/aarch64-unknown-linux-gnu/release/bpfman-ns bin/. && \
      cp target/aarch64-unknown-linux-gnu/release/bpfman-rpc bin/.; \
    elif [ "$TARGETPLATFORM" = "linux/ppc64le" ]; then \
      echo "Building ppc64le" && \
      cp target/powerpc64le-unknown-linux-gnu/release/bpfman bin/. && \
      cp target/powerpc64le-unknown-linux-gnu/release/bpfman-ns bin/. && \
      cp target/powerpc64le-unknown-linux-gnu/release/bpfman-rpc bin/.; \
    elif [ "$TARGETPLATFORM" = "linux/s390x" ]; then \
      echo "Building s390x" && \
      cp target/s390x-unknown-linux-gnu/release/bpfman bin/. && \
      cp target/s390x-unknown-linux-gnu/release/bpfman-ns bin/. && \
      cp target/s390x-unknown-linux-gnu/release/bpfman-rpc bin/.; \
    fi

FROM ubuntu:24.04

RUN apt-get update && \
    apt-get -y install ca-certificates && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/\* /tmp/\* /var/tmp/*

COPY --from=bpfman-build  /usr/src/bpfman/bin/bpfman .
COPY --from=bpfman-build  /usr/src/bpfman/bin/bpfman-ns .
COPY --from=bpfman-build  /usr/src/bpfman/bin/bpfman-rpc .

ENTRYPOINT ["./bpfman-rpc", "--timeout=0"]
